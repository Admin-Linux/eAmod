//  __________________________________________________________________________
// /                                                                          \
// |                           _                                              |
// |                          / \                         _                   |
// |                  ___    / _ \   _ __ ___   ____  ___| |                  |
// |                 / _ \  / /_\ \ | '_ ` _ \./  _ \/  _  |                  |
// |                |  __/ /  ___  \| | | | | |  (_) ) (_) |                  |
// |                 \___|/__/   \__\_| |_| |_|\____/\_____/                  |
// |                                                                          |
// |                              eAmod Script                                |
// |                                                                          |
// |--------------------------------------------------------------------------|
// | Nome do Script: Sistema de Recompensa                                    |
// |--------------------------------------------------------------------------|
// | Criado por: shellTeMP                                                    |
// |--------------------------------------------------------------------------|
// | Versões eA/brA/rA/Herc: todas/todas                                      |
// |--------------------------------------------------------------------------|
// | Descrição: Um sistema de recompensas para jogadores que jogam com maior  |
// |frequência.                                                               |
// |--------------------------------------------------------------------------|
// | Changelog:                                                               |
// | 1.0 - Script Inicial Desenvolvido. [shellTeMP]                           |
// | 1.1 - Bug de lógica corrigido. [shellTeMP]                               |
// | 1.2 - Corrigido multiplicador de ano. [shellTeMP]                        |
// | 1.3 -  Adicionada uma verificação de IP. [shellTeMP]                     |
// | 1.4 -  Mistura de recompensas melhorado. [shellTeMP]                     |
// | 1.5 - Checagem de IP movida. [shellTeMP]                                 |
// | 1.6 - Adicionada a capacidade de ver no dia seguinte via comandos        |
// | (apenas relogando). [shellTeMP]                                          |
// | 1.7 - Adicionado Delay. [shellTeMP]                                      |
// | 1.8 - Delay movido somente para não VIPs. [shellTeMP]                    |
// | 1.9 - Removidas algumas linhas inúteis. [shellTeMP]                      |
// | 2.0 - Menus removidos devido a erros. [shellTeMP]                        |
// | 2.1 - Corrigida imagem (cutin) VIP. [shellTeMP]                          |
// | 2.2 - Adicionada função para mostrar o dia anterior na cutin. [shellTeMP]|
// | 2.3 - Adicionado Loop com For. [shellTeMP]                               |
// | 2.4 - Corrigido cálculo de tempo logado (erro visual). [shellTeMP]       |
// | 2.5 - Adicionado um F_InsertPlural para "mais minutos". [shellTeMP]      |
// | 2.6 - Adicionada checagem de MAC Address. [shellTeMP]                    |
// | 2.7 - Alterada a verificação de IP. [shellTeMP]                          | 
// | 2.8 - Habilitado o modo vinculado. [shellTeMP]                           |
// | 2.9 - Adicionados comandos 'collectreward', 'dailyreward',               |
// |' collectdaily'. [shellTeMP]                                              |
// | 3.0 - Adicionado o comando 'nextreward'. [shellTeMP]                     |
// | 3.1 - Adicionados os buffs diários. [shellTeMP]                          |
// | 3.2 - Adicionadas premiações em EXP. [shellTeMP]                         |
// | 3.3 - Jogadores usando @autotrade não serão mais levados em consideração.|
// | [shellTeMP]                                                              |
// | 3.4 - Buffs movidos para a sessão VIP, para que o jogador VIP não possa  |
// | usar os buffs VIPs duas vezes. [shellTeMP]                               |
// | 3.5 - Ligeiramente otimizado. [shellTeMP]                                |
// | 3.6 - Corrigido um Bug com VIPs recebendo recompensas de bônus           | 
// | em recompensas normais. [shellTeMP]                                      |
// | 3.7 - Documentação corrigida. [shellTeMP]                                |
// | 3.8 - Corrigido alguns '[' extras no código. [shellTeMP]                 |
// | 5.3 - Desenvolvido e Corrigido Cutins [J3MK1]                            |
// \_________________________________________________________________________/

prontera,5,5,5	script	LOGIN	111,{
OnPCLoginEvent:
	if(!@logintime)
		@logintime = gettime(DT_YEAR) * 60 * 24 * 365 + gettime(DT_DAYOFYEAR) * 60 * 24 + gettime(DT_HOUR) * 60 + gettime(DT_MINUTE);
OnLoginCmnd:
	.@i = gettime(DT_YEAR) * 12 * 31 + gettime(DT_MONTH) * 31 + gettime(DT_DAYOFMONTH);
	if(.Reset && .@i > #LastDailyReward + 1)
		#DRewardCon = 0;
	if(.Reset && .@i > #LastVIPReward + 1)
		#VIPRewardCon = 0;
	.@VIPSize = getarraysize(.VIPRewards$);
	.@Size = getarraysize(.Rewards$);
	if(#DRewardCon >= .@Size && #VIPRewardCon >= .@VIPSize){
		#LastDailyReward = .@i;
		#LastVIPReward = .@i;
		end;
	}
	sleep2 1000;
	for(.@k = 0; .@k < 2; .@k++){
		if(!.@k){
			if(!vip_status(VIP_STATUS_ACTIVE) && .VIPRewards$[#VIPRewardCon + 1] != ""){
				//Mensagem strcharinfo(0),"[Recompensas Diárias]: Torne-se um VIP para mais recompensas.";
				continue;
			} else if(#VIPRewardCon >= .@VIPSize){
				message strcharinfo(0),"[Recompensas Diárias]: Não há mais recompensas VIP restantes este mês.";
				continue;
			} else if(.@i <= #LastVIPReward){
				message strcharinfo(0),"[Recompensas Diárias]: Recompensas VIP já coletadas hoje.";
				continue;
			}
		} else {
			if(#DRewardCon >= .@Size){
				message strcharinfo(0),"[Recompensas Diárias]: Não há mais recompensas restantes este mês.";
				continue;
			} else if(.@i <= #LastDailyReward){
				message strcharinfo(0),"[Recompensas Diárias]: Recompensas já coletadas hoje.";
				continue;
			}
		}
		if(!.@k)
			explode(.@XT$,.VIPRewards$[#VIPRewardCon + 1],",");
		else {
			if(.IPCheck){
				query_sql("SELECT account_id FROM `login` WHERE last_ip = '"+getcharip()+"'", .@AccountId);
				.@Size = getarraysize(.@AccountId);
				for(.@i=0; .@i < .@Size; .@i++){
					query_sql("SELECT `value` FROM `acc_reg_num` WHERE `account_id` = '"+.@AccountId[.@i]+"' AND `key` = '#LastDailyReward'",.@LastIp2);
					if(.@i <= .@LastIp2){
						message strcharinfo(0),"[Recompensas Diárias]: Recompensas são limitadas a 1 por IP desculpe.";
						continue;
					}
				}
			}
			if(.MacCheck){
				query_sql("SELECT last_unique_id FROM `login` WHERE account_id = "+getcharid(3)+"", .@last_unique_id$);
				query_sql("SELECT account_id FROM `login` WHERE last_unique_id = '"+.@last_unique_id$+"'", .@AccountId2);
				.@Size = getarraysize(.@AccountId2);
				for(.@i=0; .@i < .@Size; .@i++){
					query_sql("SELECT `value` FROM `acc_reg_num` WHERE `account_id` = '"+.@AccountId2[.@i]+"' AND `key` = '#LastDailyReward'",.@MacCheck2);
					if(.@i <= .@MacCheck2){
						message strcharinfo(0),"[Recompensas Diárias]: Recompensas são limitadas a 1 por computador, desculpe.";
						continue;
					}
				}
			}
			if(.Rest){
				.@time = gettime(DT_YEAR) * 60 * 24 * 365 + gettime(DT_DAYOFYEAR) * 60 * 24 + gettime(DT_HOUR) * 60 + gettime(DT_MINUTE);
				if(.@time < @logintime + .Rest){
					.@delay = @logintime + .Rest - .@time;
					message strcharinfo(0),"[Recompensas Diárias]: para coletar recompensas, você deve permanecer logado por "+callfunc("F_InsertPlural",.@delay,"more minute")+".";
					continue;
				}	
			}
			deletearray .@XT$[0],getarraysize(.@XT$);
			.@NextDay = #DRewardCon + 1;
			explode(.@XT$,.Rewards$[.@NextDay],",");
		}
		if(checkvending() & 2 && .Mode & 256){
			message strcharinfo(0),"[Recompensas Diárias]: Vendedores não podem receber recompensas.";
			end;
		}
		.@Size = getarraysize(.@XT$);
		deletearray .@TT[0],getarraysize(.@TT);
		deletearray .@itms[0],getarraysize(.@itms);
		deletearray .@qnts[0],getarraysize(.@qnts);
		for(.@x = y = 0; .@x < .@Size; .@x++)
			.@TT[.@x] = atoi(.@XT$[.@x]);
		if(.Mode & 1 && (.@TT[4] > 0 || .@vip[4] > 0)){
			.@Size = getarraysize(.@TT);
			for(.@x = 4; .@x <= .@Size - 1 ; .@x += 2){
				.@itms[.@y] = .@TT[.@x];
				.@qnts[.@y] = .@TT[.@x + 1];
				.@y++;
			}
			if(checkweight2(.@itms,.@qnts)){
				for(.@x = 0; .@x < .@y; .@x++){
					if(.Mode & 128)
						getitembound  .@itms[.@x], .@qnts[.@x], .Bound_Mode;
					else	getitem  .@itms[.@x], .@qnts[.@x];
				}
			} else {
				message strcharinfo(0),"[Recompensas Diárias]: Você não pode carregar os prêmios, por favor use armazenamento e relogue.";
				continue;
			}
		}
		if(.Mode & 2 && (.@TT[1])){
			#Loyalty += .@TT[1];
			message strcharinfo(0),"[Recompensas Diárias]: Recebido "+ .@TT[1] +" "+.Points$;
		}
		if(.Mode & 4 && (.@TT[0])){
			zeny += .@TT[0];
			message strcharinfo(0),"[Recompensas Diárias]: Recebido "+ .@TT[0] +"z";
		}
		if(.Mode & 8 && (.@TT[3] || .@TT[4]))
			getexp .@TT[3], .@TT[4];

		if(!.@k){
			if(.Mode & 32)
				cutin .VIPCutins$[#VIPRewardCon],4;
			#VIPRewardCon++;
			#LastVIPReward = .@i;
			sleep2 1000;
			if(.Mode & 64)
				cutin .VIPCutins$[#VIPRewardCon],4;
			message strcharinfo(0),"[Recompensas Diárias]: Você coletou sua recompensa VIP, por "+callfunc("F_InsertPlural",#VIPRewardCon,"day")+" este mês.";
		} else {
			if(.Mode & 16){
				.@Size = getarraysize(.BuffInfo);
				for(.@x = 0; .@x < .@Size; .@x += 4){
					if(.@NextDay == .BuffInfo[.@x + 1])
						sc_start .BuffInfo[.@x], .BuffInfo[.@x + 2] * 60000, .BuffInfo[.@x + 3];
				}
			}
			if(.Mode & 32)
				cutin .Cutins$[#DRewardCon],4;
			#DRewardCon++;
			#LastDailyReward = .@i;
			sleep2 1000;
			if(.Mode & 64)
				cutin .Cutins$[#DRewardCon],4;
			message strcharinfo(0),"[Recompensas Diárias]: Você coletou sua recompensa diária, por "+callfunc("F_InsertPlural",#DRewardCon,"day")+" este mês.";
		}	
		if(.Mode & 32 || .Mode & 64){
			sleep2 15000;
			cutin "",255;
		}
	}
	end;

OnNextCmnd:
	.@time = gettime(DT_YEAR) * 60 * 24 * 365 + gettime(DT_DAYOFYEAR) * 60 * 24 + gettime(DT_HOUR) * 60 + gettime(DT_MINUTE);
	if(.@time >= @logintime + .Rest){
		message strcharinfo(0),"[Recompensas Diárias]: sua próxima recompensa está disponível.";
	} else {
		.@i = gettime(DT_YEAR) * 12 * 31 + gettime(DT_MONTH) * 31 + gettime(DT_DAYOFMONTH);
		if(.@i <= #LastDailyReward)
			message strcharinfo(0),"[Recompensas Diárias]: Sua próxima recompensa estará disponível amanhã.";
		else {
			.@days = (.@time >= @logintime + .Rest) / 60 / 24;
			.@hours = ((.@time >= @logintime + .Rest) / 60) % 24;
			.@mins = (.@time >= @logintime + .Rest) % 60;
			message strcharinfo(0),"[Recompensas Diárias]: Você tem "+ ((.@days) ? .@days +" Days " : "") + ((.@hours) ? .@hours +" Hours " : "") + ((.@mins) ? .@mins +" Minutes " : "") +"até a sua próxima recompensa.";
		}
		if(.Mode & 32 || .Mode & 64){
			if(.@NextDay >= getarraysize(.Rewards$))
				.@g = 0;
			else	.@g = #DRewardCon + 1;
			cutin .Cutins$[.@g],4;
		}
	}
	end;

OnHour00:
	if(gettime(DT_DAYOFMONTH) == 1){
		query_sql("DELETE FROM `acc_reg_num` WHERE `key` = '#DRewardCon' OR `key` = '#VIPRewardCon' OR `key` = '#LastVIPReward' OR `key` = '#LastDailyReward'");
		addrid(0);
		#DRewardCon = #VIPRewardCon = #LastVIPReward = #LastDailyReward = 0;
	}
	end;

OnInit:
	// Configurações Básicas
	//   1: Item | 2: Pontos | 4: Zeny | 8: EXP
	//   16: Ganha Buffs
	//   32: Mostra as Cutins | 64: Mostra a Cutin do dia seguinte
	//   128: Itens de Recompensas Vinculadas
	//   256: Nenhuma recompensa para Autotraders
	//     (Um valor baixo, e.g. 3 = Itens & Pontos para Multiplicar)
	.Mode = 1|2|4|16|32|64|128|256;

	// Modo de vinculação de item
	// Bound_Account : item vinculado à conta
	// Bound_Guild   : Item de vinculado da guilda
	// Bound_Party   : Item vinculado do Party
	// Bound_Char    : Item de personagem vinculado
	.Bound_Mode = Bound_Account;

	// Para desabilitar o comando '@loginreward', comente as próximas linhas
	// * Precisa de comandos extras para typos
	bindatcmd("relog","LOGIN::OnLoginCmnd",0,99);
	bindatcmd("collectreward",strnpcinfo(3)+"::OnLoginCmnd",0,99);
	bindatcmd("dailyreward",strnpcinfo(3)+"::OnLoginCmnd",0,99);
	bindatcmd("collectdaily",strnpcinfo(3)+"::OnLoginCmnd",0,99);
	bindatcmd("nextreward",strnpcinfo(3)+"::OnNextCmnd",0,99);

	// Redefinir dias de volta para 0 em um dia ignorado.
	// Alternancia
	// [0] = Off
	// [1] = On
	.Reset = 0;

	// .Rest
	// Atraso após o login para coletar recompensas
	// Em Minutos.
	.Rest = 0;

	// Nome para os 'pontos'
	.Points$ = "Pontos de Fidelidade";

	// Verificação de IP para evitar contas múltiplas
	// Alternancia 
	// [0] = Off
	// [1] = On
	.IPCheck = 0;

	// Dias consecutivos de Buff
	// Cada buff contém 4 variáveis
	// <Tipo>,<Dias>,<Duração>,<Taxa>, // Buff 1
	// <Tipo>,<Dias>,<Duração>,<Taxa>, // Buff 2
	//   ...;
	//
	//  Exemplo: 188,7,45,3
	//    -No 7º dia logado, o jogador ganha +3 pontos por 45 minutos
	//
	//  O tipo é 188, que referencia qual SC_ to deve ser usado, SC_INCSTR neste exemplo
	//     -Para uma lista completa de SC_ visite o seguinte diretório db/const.txt
	//  O Dia é o dia de buff que é aplicado, neste exemplo 7, então a cada 7 dias, 14, 21, 28 ....
	//  A duração é a duração do buff em minutos, neste exemplo 45 min
	//  A Rate é um buff val1, neste exemplo o jogador ganha 3 Str
	setarray .BuffInfo
				,260,2,360,1	// Seguro de vida por 360 no 2º dia
				,198,3,120,10	// +10% Hp por 120 Mins no 3º dia
				,260,4,360,1	// Seguro de vida for 360 no 4º dia
				,196,5,120,25	// +25 Esquiva por 120 Mins no 5º dia
				,198,6,120,10	// +10% Hp por 120 Mins no 6º dia
				,257,7,240,50	// +50% Exp for 240 Mins no 7º dia
				,260,8,360,1	// Seguro de vida for 360 no 8º dia
				,198,9,120,10	// +10% Hp por 120 Mins no 9º dia
				,196,10,120,25	// +25 de Esquiva por 120 Mins no 10º dia

				,198,12,120,10	// +10% Hp por 120 Mins no 12º dia
				,257,14,240,50	// +50% Exp for 240 Mins no 14º dia
				,196,15,120,25	// +25 de Esquiva por 120 Mins no 15º dia
				,260,16,360,1	// Seguro de vida por 360 Mins no 16º dia

				,198,18,120,10	// +10% Hp por 120 Mins no 18º dia
				,196,20,120,25	// +25 de Esquiva por 120 Mins no 20º dia
				,257,21,240,50	// +50% Exp for 240 Mins no 21º dia
				,260,22,360,1	// Seguro de vida por 360 no 22º dia

				,198,24,120,10	// +10% Hp por 120 Mins no 24º dia
				,196,25,120,25	// +25 de Esquiva por 120 Mins no 25º dia
				,260,26,360,1	// Seguro de vida por 360 no 26º dia
				,198,27,120,10	// +10% Hp por 120 Mins no 27º dia
				,257,28,240,50	// +50% Exp for 240 Mins no 28º dia

				,196,30,120,25;	// +25 de Esquiva por 120 Mins no 30º dia

	//Itens de prêmio diário:
	//   "<Zeny>,<Pontos>,<EXP de Base>,<EXP de Job>,<ID do Item 1>,<Quantidade do Item 1>,<ID do Item 2>,<Quantidade do Item 2>...etc", // Dia 1
	//   "<Zeny>,<Pontos>,<EXP de Base>,<EXP de Job>,<ID do Item 1>,<Quantidade do Item 1>,<ID do Item 2>,<Quantidade do Item 2>...etc"  // Dia 2
	//   ...;
	// O comprimento total de qualquer sequência de dias deve ser de 255 ou menos
	setarray .Rewards$[1],
		"1000",				// Dia 1: 1000 Zeny
		"0,0,0,0,501,5",		// Dia 2: 5 Poções Vermelhas
		"0,0,0,0,506,5",		// Dia 3: 5 Poções Verdes
		"2000",				// Dia 4: 2000 Zeny
		"2000",				// Dia 5: 2000 Zeny
		"0,0,0,0,502,5",		// Dia 6: 5 Poção Laranja
		"0,0,0,0,12208,1",		// Dia 7: 1 Manual de Combate
		"2500",				// Dia 8: 2500 Zeny
		"2500",				// Dia 8: 2500 Zeny
		"2500",				// Dia 9: 2500 Zeny
		"0,0,0,0,503,5",		// Dia 10: 5 Poções Brancas
		"2500",				// Dia 11: 2500 Zeny
		"2500",				// Dia 12: 2500 Zeny
		"2500",				// Dia 13: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 14: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 15: 2500 Zeny
		"2500",				// Dia 16: 2500 Zeny
		"2500",				// Dia 17: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 18: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 19: 2500 Zeny
		"2500",				// Dia 20: 2500 Zeny
		"0,0,0,0,604,3",		// Dia 21: 1 Dead Branch
		"2500",				// Dia 22: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 23: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 24: 2500 Zeny
		"2500",				// Dia 25: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 26: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 27: 2500 Zeny
		"2500";				// Dia 28: 2500 Zeny


	// Itens de Prêmiação VIP:
	//   "<Zeny>,<Pontos>,<EXP de Base>,<EXP de Job>,<ID do Item 1>,<Quantidade do Item 1>,<ID do Item 2>,<Quantidade do Item 2>...etc", // Dia 1
	//   "<Zeny>,<Pontos>,<EXP de Base>,<EXP de Job>,<ID do Item 1>,<Quantidade do Item 1>,<ID do Item 2>,<Quantidade do Item 2>...etc"  // Dia 2
	//   ...;
	// O comprimento total de qualquer sequência de dias deve ser de 255 ou menos
	//
	// Observe os VIPs Recolhem as recompensas VIP e de Jogador normal
	setarray .VIPRewards$[1],
		"1000",				// Dia 1: 1000 Zeny
		"0,0,0,0,501,5",		// Dia 2: 5 Poções Vermelhas
		"0,0,0,0,506,5",		// Dia 3: 5 Poções Verdes
		"2000",				// Dia 4: 2000 Zeny
		"2000",				// Dia 5: 2000 Zeny
		"0,0,0,0,502,5",		// Dia 6: 5 Poção Laranja
		"0,0,0,0,12208,1",		// Dia 7: 1 Manual de Combate
		"2500",				// Dia 8: 2500 Zeny
		"2500",				// Dia 8: 2500 Zeny
		"2500",				// Dia 9: 2500 Zeny
		"0,0,0,0,503,5",		// Dia 10: 5 Poções Brancas
		"2500",				// Dia 11: 2500 Zeny
		"2500",				// Dia 12: 2500 Zeny
		"2500",				// Dia 13: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 14: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 15: 2500 Zeny
		"2500",				// Dia 16: 2500 Zeny
		"2500",				// Dia 17: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 18: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 19: 2500 Zeny
		"2500",				// Dia 20: 2500 Zeny
		"0,0,0,0,604,3",		// Dia 21: 1 Dead Branch
		"2500",				// Dia 22: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 23: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 24: 2500 Zeny
		"2500",				// Dia 25: 2500 Zeny
		"0,0,0,0,503,5,506,3",		// Dia 26: 5 Poção Branca + 3 Poções Verdes
		"2500",				// Dia 27: 2500 Zeny
		"2500";				// Dia 28: 2500 Zeny

	// Cutin Array
	//	Mostra um cutin antes de coletar para cada data
	//	Comece em 0 se mostrar no dia seguinte
	setarray .Cutins$,
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_08",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_08",
			"kafra_09",
			"kafra_01",
			"kafra_02",
			"kafra_03";

	// Cutin Array
	//	Mostra um cutin na coleta para cada data
	setarray .VIPCutins$,
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_08",
			"kafra_01",
			"kafra_02",
			"kafra_03",
			"kafra_04",
			"kafra_05",
			"kafra_06",
			"kafra_07",
			"kafra_08",
			"kafra_09",
			"kafra_01",
			"kafra_02",
			"kafra_03";
end;
}
